

@model UBA_Network_Security_System.Models.Account





<div class="row">
    <div class="col">
        <section class="ftco-section" style="padding-top:0px; padding-bottom: 2px;">
            <div class="row justify-content-center">
                <div class="login-wrap">
                    <div class="img" style="background-image: url(/Images/UBA5.jpeg);"></div>
                    <h3 class="text-center mb-4">
                        @if (Model.Phone != null)
                        {<span>Update Account</span>}
                        else
                        { <span>Add New Account</span>}
                    </h3>



                    @using (Html.BeginForm("Account", "Client", FormMethod.Post, new { @id = "frmAccount" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        if (Model.AccountNumber != null &&
                            Model.SecurePass != null &&
                            Model.MaritalStatus != null &&
                            Model.DOB != null &&
                            Model.DOO != null)
                        {
                            @Html.HiddenFor(x => x.AccountNumber)
                            @Html.HiddenFor(x => x.SecurePass)
                            @Html.HiddenFor(x => x.MaritalStatus)
                            @Html.HiddenFor(x => x.DOB)
                            @Html.HiddenFor(x => x.DOO)
                        }


                        <h4>Customer Personal Details</h4>
                        <hr />

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.BVN, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.BVN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BVN, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(x => x.Gender, new SelectList(ViewBag.GenderList, "Name", "Name"), "Select your gender", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.PermanentResident, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.PermanentResident, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PermanentResident, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.ResidentialAddress, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.ResidentialAddress, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.ResidentialAddress, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.LGA, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.LGA, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LGA, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.ResidentialCountry, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.ResidentialCountry, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ResidentialCountry, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label  " })
                            @Html.DropDownListFor(x => x.MaritalStatus, new SelectList(ViewBag.MaritalStatus, "Status", "Status"), "Select marital status", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                        </div>

                        <h4>Customer Means of Identification</h4>
                        <hr />
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdentificationType, htmlAttributes: new { @class = "control-label  " })
                            @Html.DropDownListFor(x => x.IdentificationType, new SelectList(ViewBag.IDType, "Name", "Name"), "Select means of identification", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdentificationType, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdentificationIssuedDate, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.IdentificationIssuedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IdentificationIssuedDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdentificationValidTill, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.IdentificationValidTill, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IdentificationValidTill, "", new { @class = "text-danger" })
                        </div>


                        <h4>Customer Security Details</h4>
                        <hr />
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.SecurePass, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.SecurePass, new { htmlAttributes = new { @class = "form-control", @placeholder = "Not more than 6 characters" } })
                            @Html.ValidationMessageFor(model => model.SecurePass, "", new { @class = "text-danger" })
                        </div>


                        <h4>Account Details</h4>
                        <hr />
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.AccountTypeID, htmlAttributes: new { @class = "control-label  " })
                            @Html.DropDownListFor(x => x.AccountTypeID, new SelectList(ViewBag.AccountTypes, "Type", "Type"), "Select Account type", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.AccountTypeID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.AccountManagerName, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.AccountManagerName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AccountManagerName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.BranchOffice, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.BranchOffice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BranchOffice, "", new { @class = "text-danger" })
                        </div>


                        <div style="text-align: center;" id="loaderDiv11" class="pt-2">
                            <img src="~/Images/loadingx.gif" width="80" height="80" class="img img-thumbnail" />
                        </div>

                        <div class="d-grid gap-2 col-md-12 mx-auto mt-2">
                            <a href="#" class="btn btn-primary submit fw-bold px-3 fw-bolder" id="btnSaveUpdate">
                                @if (Model.Phone != null)
                                {<span>Update Account</span>}
                                else
                                { <span>Save New Account</span>}
                            </a>
                        </div>
                    }




                </div>
            </div>
        </section>
    </div>

</div>





<script>

    $(document).ready(function () {
        $("#loaderDiv11").hide();



        $("#btnSaveUpdate").click(function () {

            $("#loaderDiv11").show();

            var frmData = $("#frmAccount").serialize();
            var data = frmData;
            debugger;

            $.ajax({
                type: "POST",
                url: "/Client/Account",
                data: data,
                success: function (result) {
                    $("#loaderDiv11").hide();
                    $("#AddEditModal").modal("hide"); //TO HIDE MODAL AFTER SAVING RECORD
                    if (result.trim != "" || result.trim != null) {
                        alert(result);
                    }
                    window.location.href = "/Client/Account";
                }
            })
        })

    })
</script>


