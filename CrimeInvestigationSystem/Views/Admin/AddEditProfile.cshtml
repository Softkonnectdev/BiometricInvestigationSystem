

@model CrimeInvestigationSystem.Models.Profile





<div class="row">
    <div class="col">
        <section class="ftco-section" style="padding-top:0px; padding-bottom: 2px;">
            <div class="row justify-content-center">
                <div class="login-wrap">
                    <div class="img" style="background-image: url(/Images/img-01.png);"></div>
                    <h3 class="text-center mb-4">
                        @if (Model.Email != null)
                        {<span>Update Profile</span>}
                        else
                        { <span>Add New Profile</span>}
                    </h3>



                    @*@using (Html.BeginForm("UsersProfile", "Admin", FormMethod.Post, new { @id = "frmProfile" }))
                        {*@
                <form id="frmProfile">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(x => x.ProfileId)
                    @Html.HiddenFor(x => x.CreatedOn)

                    @if (Model.Passport != null &&
                    Model.RightThumb != null &&
                    Model.LeftThumb != null &&
                    Model.DOB != null &&
                    Model.CreatedOn != null)
                    {
                        @Html.HiddenFor(x => x.Passport)
                        @Html.HiddenFor(x => x.RightThumb)
                        @Html.HiddenFor(x => x.LeftThumb)
                        @Html.HiddenFor(x => x.DOB)
                        @Html.HiddenFor(x => x.CreatedOn)

                    }


                    <h4>Customer Personal Details</h4>
                    <hr />
                    <div class="row">

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="row">

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label  " })

                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "E.g 08012345678" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="row">

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(x => x.Gender, new SelectList(ViewBag.GenderList, "Name", "Name"), "Select your gender", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.PermanentResident, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.PermanentResident, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PermanentResident, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.ResidentialAddress, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.ResidentialAddress, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.ResidentialAddress, "", new { @class = "text-danger" })
                        </div>

                    </div>


                    <div class="row">

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.LGA, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.LGA, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LGA, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label  " })
                            @Html.DropDownListFor(x => x.State, new SelectList(ViewBag.StateList, "Name", "Name"), "Select your State", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label  " })
                            @Html.DropDownListFor(x => x.Nationality, new SelectList(ViewBag.CountryList, "Name", "Name"), "Select your Nationality", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                        </div>

                    </div>


                    <div class="row">

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.ResidentialCountry, htmlAttributes: new { @class = "control-label  " })
                            @Html.DropDownListFor(x => x.ResidentialCountry, new SelectList(ViewBag.CountryList, "Name", "Name"), "Select your Nationality", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ResidentialCountry, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label  " })
                            @Html.DropDownListFor(x => x.MaritalStatus, new SelectList(ViewBag.MaritalStatus, "Status", "Status"), "Select marital status", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                        </div>

                    </div>


                    <div class="row">

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.NextofKinName, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.NextofKinName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NextofKinName, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.NextofKinPhone, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.NextofKinPhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NextofKinPhone, "", new { @class = "text-danger" })
                        </div>

                    </div>


                    <h4>Means of Identification</h4>
                    <hr />


                    <div class="row">

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdentificationType, htmlAttributes: new { @class = "control-label  " })
                            @Html.DropDownListFor(x => x.IdentificationType, new SelectList(ViewBag.IDType, "Name", "Name"), "Select means of identification", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdentificationType, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row">

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdentificationIssuedDate, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.IdentificationIssuedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IdentificationIssuedDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.IdentificationValidTill, htmlAttributes: new { @class = "control-label  " })
                            @Html.EditorFor(model => model.IdentificationValidTill, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IdentificationValidTill, "", new { @class = "text-danger" })
                        </div>

                    </div>



                    <div style="text-align: center;" id="loaderDiv11" class="pt-2">
                        <img src="~/Images/loadingx.gif" width="80" height="80" class="img img-thumbnail" />
                    </div>

                    <div class="d-grid gap-2 col-md-12 mx-auto mt-2">
                        @* <input type="submit" id="btnSubmit" value="Submit Now" class="btn btn-primary submit fw-bold px-3 fw-bolder" />*@

                        <a href="#" class="btn btn-primary submit fw-bold px-3 fw-bolder" id="btnSaveUpdate">
                            @if (Model.Phone != null)
                            {<span>Update Profile</span>}
                            else
                            { <span>Save New Profile</span>}
                        </a>
                    </div>

                </form>
                    @* }*@




                </div>
            </div>
        </section>
    </div>

</div>





<script>

    $(document).ready(function () {
        $("#loaderDiv11").hide();



        $("#btnSubmit").click(function () {
            let surName = $("#SurName").val();
            let IdNo = $("#IdentificationNumber").val();
            let email = $("#Email").val();

            if (surName != "" && IdNo != "" && email != "")
                $("#loaderDiv11").show();


        })




        $("#btnSaveUpdate").click(function () {

            $("#loaderDiv1").show();

            var frmData = $("#frmProfile").serialize();
            var data = frmData;
            debugger;

            $.ajax({
                type: "POST",
                url: "/Admin/UsersProfile",
                data: data,
                success: function (result) {
                    $("#loaderDiv11").hide();
                    $("#AddEditModal").modal("hide"); //TO HIDE MODAL AFTER SAVING RECORD
                    if (result.trim != "" || result.trim != null) { alert(result); }
                    window.location.href = "/Admin/UsersProfile";
                }
            })
        })
    })
</script>


